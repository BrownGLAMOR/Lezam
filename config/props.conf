##### AGENT PARAMETERS

# alpha parameter
#alpha = 0.2

#alpha0 = 0.2
alpha0 = 0.2
alpha1 = 0.2
#alpha2 = 0.4
alpha2 = 0.2

# alpha parameters
alphaF0 = 0.1
alphaF1 = 0.2
alphaF2 = 0.2

alphaDay0 = 0.2
alphaLastDay = 0.2

# if capacity is low, perhaps higher opportunity cost of F0 queries
alphaF0CapL = 0.1

# if capacity is high, perhaps can afford to be more aggressive on F2 queries
alphaF2CapH = 0.2
alphaF2CapL = 0.25

# low alpha: alpha increases linearly as value decreases, with 
# alphaLowValue the maximum value it achieves when Id = 0
# it has no effect when set to 0

alphaLowValue = 0.3

# learning between policies
learnRate = 0.3
beta = 3

# increment: for online learning
# use policies: alpha*, alpha* + inc, alpha* + 2*inc, ..., 1 
# the initial weight diminishes exponentially with distance from alpha*
# only update when Id = 1

increment = 0.1

# number of games before agent shuts down
num_games = 1

# bidder class

bidderClass = edu.upenn.cis.tac.aa.agents.quakagent.bidder.AdvancedValueBidder

# ad selector class

adSelectorClass = edu.upenn.cis.tac.aa.agents.quakagent.adSelector.SimpleAdSelector

valueEstClass = edu.upenn.cis.tac.aa.agents.quakagent.valueEstimator.AdvancedValueEstimator

# user distribution file properties
# currently only use history
ud_learning_w = 1

# update user distributions: 1
ud_upd = 0

# ctr learning file properties
# currently use only historic information: 1
ctr_learning_w = 1

# update learning ctrs: 1
pctr_upd = 0

f0values = valuesF0.txt
f1values = valuesF1.txt
f2values = valuesF2.txt
values = values.txt

f0_filename = f0data.txt
f1_filename = f1data.txt
f2_filename = f2data.txt
f0_tot_filename = f0totdata.txt
f1_tot_filename = f1totdata.txt
f2_tot_filename = f2totdata.txt
num_games_filename = numgames.txt

f0_ctr_filename = f0ctrdata.txt
f1_ctr_filename = f1ctrdata.txt
f2_ctr_filename = f2ctrdata.txt
num_games_ctr_filename = ctrnumgames.txt

########################################################
########################################################
########################################################
##### GAME PARAMETERS

# revenue per conversion

baseRevenue = 10

# number of agents

numAgents = 8

# num search users

numSearchUsers = 90000

# number of users in each preference type

NSinit = 10000

# NS->IS transition probability

NStoIS = 0.01

# NS-IS probability during burst

NStISburst = 0.05

# probability of a searching burst

probBurst = 0.1

# promoted slot bonus

PSB = 0.5

# F0 conversion baseline

F0baseline = 0.1

# F1 conversion baseline

F1baseline = 0.2

# F2 conversion baseline

F2baseline = 0.3

# distribution capacity options
capH = 500
capM = 400
capL = 300

# User click behavior distribution parameters
#advertisereffect = baseline click probabilities
# server, version 0.9.4

advertiserEffectF0_LB = 0.2
advertiserEffectF0_UB = 0.3

advertiserEffectF1_LB = 0.3
advertiserEffectF1_UB = 0.4

advertiserEffectF2_LB = 0.4
advertiserEffectF2_UB = 0.5

contProbF0_LB = 0.2
contProbF0_UB = 0.8

contProbF1_LB = 0.3
contProbF1_UB = 0.9

contProbF2_LB = 0.5
contProbF2_UB = 0.95

# number of advertiser positions
num_pos = 5